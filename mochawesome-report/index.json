{
  "stats": {
    "suites": 4,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-01T16:06:18.375Z",
    "end": "2021-12-01T16:06:18.655Z",
    "duration": 280,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "682ba2e2-8d95-49d3-9ab2-ebc635c33d1a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "defde9e3-36a7-4317-8dfc-f13615a4410a",
          "title": "ALL TEST ",
          "fullFile": "/home/thaerbraizat/back-end/tests/task.spec.js",
          "file": "/tests/task.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should get Err if try login with wrong information ",
              "fullTitle": "ALL TEST  It should get Err if try login with wrong information ",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n  title: \"JUST TEST\",\n  qwe: \"123\",\n};\nchai\n  .request(app)\n  .post(\"/login\")\n  .send(user)\n  .end((err, response) => {\n    response.body.should.be.eq(\"WORNG LOGIN!!!\");\n    response.should.have.status(401);\n    done();\n  });",
              "err": {},
              "uuid": "ef112302-4a62-4a75-930f-226d7e19cf0d",
              "parentUUID": "defde9e3-36a7-4317-8dfc-f13615a4410a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "da14018f-39a5-4629-a630-dc88fc3e4972",
              "title": "USER ROUTES TEST",
              "fullFile": "/home/thaerbraizat/back-end/tests/task.spec.js",
              "file": "/tests/task.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get Test WORKING FINE !!!!",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should get Test WORKING FINE !!!!",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/\")\n  .end((err, res) => {\n    res.body.should.be.eq(\"Test WORKING FINE !!!! \");\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "dcf6976b-0d52-401b-9411-c210bc73fb37",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get all Users",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should get all Users",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/users\")\n  .end((err, res) => {\n    res.body.should.be.a(\"array\");\n    res.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "2b5cce2c-344b-44b8-93ea-7740967c16c4",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err if you hit wrong route",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should get Err if you hit wrong route",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/usersssss\")\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
                  "err": {},
                  "uuid": "bd91d8cc-b1f6-4741-b48b-255e1786242e",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should signup as a new user ",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should signup as a new user ",
                  "timedOut": false,
                  "duration": 61,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  username: \"JUST TEST\",\n  password: \"123\",\n};\nchai\n  .request(app)\n  .post(\"/signup\")\n  .send(user)\n  .end((err, response) => {\n    response.body.should.be.a(\"object\");\n    response.body.username.should.be.eq(\"JUST TEST\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "6849c964-effc-4d62-b468-b21cc796f858",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err if you pass wrong body  ",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should get Err if you pass wrong body  ",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  userna123me: \"JUST TEST\",\n  passw213123ord: \"123\",\n};\nchai\n  .request(app)\n  .post(\"/signup\")\n  .send(user)\n  .end((err, response) => {\n    response.body.should.be.eq(\"invalid signup\");\n    response.should.have.status(401);\n    done();\n  });",
                  "err": {},
                  "uuid": "57e97e39-10da-4963-85f7-c6b41367d00b",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should signin  ",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should signin  ",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  username: \"JUST TEST\",\n  password: \"123\",\n};\nchai\n  .request(app)\n  .post(\"/login\")\n  .send(user)\n  .end((err, response) => {\n    response.body.should.be.a(\"object\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "25a98ab6-e5b7-44cf-bfa1-ddf180b1b9c7",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err if login with wrong password or username ",
                  "fullTitle": "ALL TEST  USER ROUTES TEST It should get Err if login with wrong password or username ",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  username: \"JUST TEST\",\n  password: \"123qweqweqweqweqwe\",\n};\nchai\n  .request(app)\n  .post(\"/login\")\n  .send(user)\n  .end((err, response) => {\n    response.body.should.be.eq(\"WORNG LOGIN!!!\");\n    response.should.have.status(401);\n    done();\n  });",
                  "err": {},
                  "uuid": "a9d29cc4-e6ce-455d-9333-425e8cb3792d",
                  "parentUUID": "da14018f-39a5-4629-a630-dc88fc3e4972",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dcf6976b-0d52-401b-9411-c210bc73fb37",
                "2b5cce2c-344b-44b8-93ea-7740967c16c4",
                "bd91d8cc-b1f6-4741-b48b-255e1786242e",
                "6849c964-effc-4d62-b468-b21cc796f858",
                "57e97e39-10da-4963-85f7-c6b41367d00b",
                "25a98ab6-e5b7-44cf-bfa1-ddf180b1b9c7",
                "a9d29cc4-e6ce-455d-9333-425e8cb3792d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 183,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
              "title": "POSTS ROUTES TEST",
              "fullFile": "/home/thaerbraizat/back-end/tests/task.spec.js",
              "file": "/tests/task.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should add a new post  ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should add a new post  ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"tesst\",\n  body: \"qwqwq\",\n};\nchai\n  .request(app)\n  .post(\"/posts\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(post)\n  .end((err, response) => {\n    response.body.should.be.a(\"object\");\n    response.body.title.should.be.eq(\"tesst\");\n    response.body.body.should.be.eq(\"qwqwq\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "8a437280-e7a1-478d-b21a-62b6fc82a8f2",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get all posts  ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get all posts  ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/posts\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "6664892a-a90b-49fa-a5d1-578302e27254",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get posts by user id ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get posts by user id ",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .get(\"/posts/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "3a20fd0e-9068-4044-96f5-089ddbbb3ffa",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should delete post by POST id ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should delete post by POST id ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .delete(\"/posts/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.eq(\"post deleted !!\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "bfbf2036-a6fd-4916-aed1-feb20ed3b939",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err update post not exist ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get Err update post not exist ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  body: \"test update from test\",\n  title: \"update from test\",\n};\nchai\n  .request(app)\n  .put(\"/posts/123123\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(obj)\n  .end((err, response) => {\n    response.body.should.be.eq(\"Cant Update\");\n    response.should.have.status(500);\n    done();\n  });",
                  "err": {},
                  "uuid": "a239c39d-819b-47c8-9125-5f5a76704241",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should update post  ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should update post  ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const obj = {\n  body: \"test update from test\",\n  title: \"update from test\",\n};\nconst obj1 = {\n  body: \"test update from test\",\n  title: \"update from test\",\n  id: 2,\n};\nconst note = await postModel.create({\n  body: obj.body,\n  title: obj.title,\n  userId: 1,\n});\nconst response = await chai\n  .request(app)\n  .put(`/posts/${note.dataValues.id}`)\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(obj1);\nresponse.body.should.be.eq(\"post updated !!\");\nresponse.should.have.status(200);",
                  "err": {},
                  "uuid": "f84ee501-0559-4eb7-82b3-925c0c880d54",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err when add post with wrong body",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get Err when add post with wrong body",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  usernamea: \"qweqwe\",\n};\nchai\n  .request(app)\n  .post(\"/posts\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(post)\n  .end((err, response) => {\n    response.body.should.be.eq(\"Cant add post\");\n    response.should.have.status(500);\n    done();\n  });",
                  "err": {},
                  "uuid": "841d8fa6-3c96-451a-a380-179520f32c96",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err when try delete post not exist ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get Err when try delete post not exist ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(app)\n  .delete(\"/posts/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.eq(\"Cant delete\");\n    response.should.have.status(500);\n    done();\n  });",
                  "err": {},
                  "uuid": "3bf8e772-e6d6-464f-8968-33423760bf8a",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err when use posts routes and you Not logged in  ",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get Err when use posts routes and you Not logged in  ",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"tess\",\n  body: \"qwqwq\",\n};\nchai\n  .request(app)\n  .post(\"/posts\")\n  .send(post)\n  .end((err, response) => {\n    response.body.should.be.eq(\"No Authorization info\");\n    response.should.have.status(401);\n    done();\n  });",
                  "err": {},
                  "uuid": "4594c87a-73d3-4f87-b8e2-f76e5a67b9d1",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should get Err if you have invaild token",
                  "fullTitle": "ALL TEST  POSTS ROUTES TEST It should get Err if you have invaild token",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"JUST TEST\",\n  body: \"123\",\n};\nchai\n  .request(app)\n  .post(\"/posts\")\n  .set(\"Authorization\", `Bearer ${\"wqeqweqweqweqew\"}`)\n  .send(post)\n  .end((err, response) => {\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "fcf406a8-b517-4e66-8fa8-c72a8ebc7eb0",
                  "parentUUID": "28f9455b-139c-4b8a-9e3c-536f8fe2fd0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a437280-e7a1-478d-b21a-62b6fc82a8f2",
                "6664892a-a90b-49fa-a5d1-578302e27254",
                "3a20fd0e-9068-4044-96f5-089ddbbb3ffa",
                "bfbf2036-a6fd-4916-aed1-feb20ed3b939",
                "a239c39d-819b-47c8-9125-5f5a76704241",
                "f84ee501-0559-4eb7-82b3-925c0c880d54",
                "841d8fa6-3c96-451a-a380-179520f32c96",
                "3bf8e772-e6d6-464f-8968-33423760bf8a",
                "4594c87a-73d3-4f87-b8e2-f76e5a67b9d1",
                "fcf406a8-b517-4e66-8fa8-c72a8ebc7eb0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [
            "ef112302-4a62-4a75-930f-226d7e19cf0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
          "title": "COMMENTS ROUTES TEST",
          "fullFile": "/home/thaerbraizat/back-end/tests/task.spec.js",
          "file": "/tests/task.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should add comment by POST id  ",
              "fullTitle": "COMMENTS ROUTES TEST It should add comment by POST id  ",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = {\n  name: \"test add comment from test\",\n  email: \"comment from test\",\n  body: \"comment\",\n};\nchai\n  .request(app)\n  .post(\"/comments/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(obj)\n  .end((err, response) => {\n    response.body.should.be.a(\"object\");\n    done();\n  });",
              "err": {},
              "uuid": "be604b31-32c5-4340-8623-286feb46681b",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should get comment by id ",
              "fullTitle": "COMMENTS ROUTES TEST It should get comment by id ",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .post(\"/comments/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.eq(\"Cant add comment\");\n    done();\n  });",
              "err": {},
              "uuid": "ba1acb0d-ad74-4b6a-9d17-9b9b7ed8362a",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should get all comments ",
              "fullTitle": "COMMENTS ROUTES TEST It should get all comments ",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(\"/comments\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    done();\n  });",
              "err": {},
              "uuid": "882f61cd-9b2e-414e-ba1b-9ed4be3b93a8",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should get comment by postId ",
              "fullTitle": "COMMENTS ROUTES TEST It should get comment by postId ",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(\"/comments/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    done();\n  });",
              "err": {},
              "uuid": "8a16ea10-9abd-49bf-a52b-721f18a7df55",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should get err when you add wrong postId  ",
              "fullTitle": "COMMENTS ROUTES TEST It should get err when you add wrong postId  ",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(app)\n  .get(\"/comments/qweqwe\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .end((err, response) => {\n    response.body.should.be.eq(\"cant get comments\");\n    response.should.have.status(500);\n    done();\n  });",
              "err": {},
              "uuid": "6d550b0b-a0e1-45bb-ac0e-4056dbd6d740",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should get Err when you try to  add comment with wrong data ",
              "fullTitle": "COMMENTS ROUTES TEST It should get Err when you try to  add comment with wrong data ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = {\n  naqewme: \"test add comment from test\",\n  emawqeil: \"comment from test\",\n  bod123y: \"comment\",\n};\nchai\n  .request(app)\n  .post(\"/comments/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send(obj)\n  .end((err, response) => {\n    response.body.should.be.eq(\"Cant add comment\");\n    response.should.have.status(500);\n    done();\n  });",
              "err": {},
              "uuid": "7bb6a430-3439-4fc9-ae9b-2380c99eb773",
              "parentUUID": "e5fa2d5c-c4fa-472b-95d5-4bf4cb081cea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be604b31-32c5-4340-8623-286feb46681b",
            "ba1acb0d-ad74-4b6a-9d17-9b9b7ed8362a",
            "882f61cd-9b2e-414e-ba1b-9ed4be3b93a8",
            "8a16ea10-9abd-49bf-a52b-721f18a7df55",
            "6d550b0b-a0e1-45bb-ac0e-4056dbd6d740",
            "7bb6a430-3439-4fc9-ae9b-2380c99eb773"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "6.0.1"
    }
  }
}