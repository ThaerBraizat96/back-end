'use strict';function cov_2jbx75hfg2(){var path="/home/thaerbraizat/back-end/controllers/signin.controller.mjs";var hash="96348440211272e4822a04eecc308d55bc42216b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/controllers/signin.controller.mjs",statementMap:{"0":{start:{line:8,column:22},end:{line:43,column:1}},"1":{start:{line:9,column:25},end:{line:9,column:92}},"2":{start:{line:10,column:12},end:{line:10,column:30}},"3":{start:{line:11,column:12},end:{line:11,column:66}},"4":{start:{line:12,column:12},end:{line:12,column:60}},"5":{start:{line:21,column:26},end:{line:21,column:90}},"6":{start:{line:22,column:12},end:{line:22,column:43}},"7":{start:{line:23,column:12},end:{line:28,column:21}},"8":{start:{line:24,column:22},end:{line:24,column:64}},"9":{start:{line:25,column:22},end:{line:25,column:38}},"10":{start:{line:27,column:24},end:{line:27,column:50}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:22},end:{line:8,column:23}},loc:{start:{line:8,column:47},end:{line:43,column:1}},line:8}},branchMap:{"0":{loc:{start:{line:23,column:12},end:{line:28,column:21}},type:"if",locations:[{start:{line:23,column:12},end:{line:28,column:21}},{start:{line:23,column:12},end:{line:28,column:21}}],line:23},"1":{loc:{start:{line:23,column:16},end:{line:23,column:29}},type:"binary-expr",locations:[{start:{line:23,column:16},end:{line:23,column:21}},{start:{line:23,column:25},end:{line:23,column:29}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"96348440211272e4822a04eecc308d55bc42216b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2jbx75hfg2=function(){return actualCoverage;};}return actualCoverage;}cov_2jbx75hfg2();import base64 from'base-64';import bcrypt from"bcrypt";import{userModel}from'../models/index.mjs';cov_2jbx75hfg2().s[0]++;export const signin=async(req,res,next)=>{cov_2jbx75hfg2().f[0]++;const user=(cov_2jbx75hfg2().s[1]++,await userModel.findOne({where:{username:req.body.username}}));cov_2jbx75hfg2().s[2]++;console.log(user);cov_2jbx75hfg2().s[3]++;console.log("passsssssssss",user.dataValues.password);cov_2jbx75hfg2().s[4]++;console.log("password body ",req.body.password);// const salt = await bcrypt.genSalt(10);
// const passwordTest = await bcrypt.hash(req.body.password, salt);
// console.log(passwordTest);
// const test = await bcrypt.hash(req.body.password, 10);
//     console.log('test ahsss',test);
const valid=(cov_2jbx75hfg2().s[5]++,await bcrypt.compare(req.body.password,user.dataValues.password));cov_2jbx75hfg2().s[6]++;console.log("valid : ",valid);cov_2jbx75hfg2().s[7]++;if((cov_2jbx75hfg2().b[1][0]++,valid)&&(cov_2jbx75hfg2().b[1][1]++,user)){cov_2jbx75hfg2().b[0][0]++;cov_2jbx75hfg2().s[8]++;console.log("teeeeeeeeeeeeeeeeest ",user);cov_2jbx75hfg2().s[9]++;res.json(user);}else{cov_2jbx75hfg2().b[0][1]++;cov_2jbx75hfg2().s[10]++;res.json("WORNG LOGIN!!!");}// console.log('req.bodyyyyyyyyyyyyyy',req.body.username);
// const user = await userModel.findOne({ where: { username: req.body.username } });
// // const valid = await bcrypt.compare(password, req.body.password);
// console.log('validsssssssssssssssssss',user);
// UserSchema.authenticateBasic(req.body.username,req.body.password).then(validUser=> {
//     req.user = validUser;
//     next();
// }).catch(err=> next('invalid users'));
};// UserSchema.authenticateBasic = async function (username, password) {
//     const user = await UserSchema.findOne({ where: { username: username } });
//     console.log("aaaaaaaaaaa        authenticateBasic user : ", user);
//     console.log("aaaaaaaaaaaaaa          password :", password);
//     console.log("aaaaaaaaaaaaaaaaaaa      user.password : ", user.password);
//     const valid = await bcrypt.compare(password, user.password);
//     console.log("valid : ", valid);
//     if (valid) {
//       console.log("teeeeeeeeeeeeeeeeest ",user);
//       return user;
//     }
//     throw new Error("Invalid UserName and Password");
//   };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25pbi5jb250cm9sbGVyLm1qcyJdLCJuYW1lcyI6WyJiYXNlNjQiLCJiY3J5cHQiLCJ1c2VyTW9kZWwiLCJzaWduaW4iLCJyZXEiLCJyZXMiLCJuZXh0IiwidXNlciIsImZpbmRPbmUiLCJ3aGVyZSIsInVzZXJuYW1lIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJkYXRhVmFsdWVzIiwicGFzc3dvcmQiLCJ2YWxpZCIsImNvbXBhcmUiLCJqc29uIl0sIm1hcHBpbmdzIjoiQUFBQSxhLHMwREFlWTsyRkFiWixNQUFPQSxDQUFBQSxNQUFQLEtBQW1CLFNBQW5CLENBQ0EsTUFBT0MsQ0FBQUEsTUFBUCxLQUFtQixRQUFuQixDQUVBLE9BQVFDLFNBQVIsS0FBd0IscUJBQXhCLEMsd0JBRUEsTUFBTyxNQUFNQyxDQUFBQSxNQUFNLENBQUcsTUFBTUMsR0FBTixDQUFXQyxHQUFYLENBQWdCQyxJQUFoQixHQUF5Qix5QkFDbkMsS0FBTUMsQ0FBQUEsSUFBSSwwQkFBRyxLQUFNTCxDQUFBQSxTQUFTLENBQUNNLE9BQVYsQ0FBa0IsQ0FBRUMsS0FBSyxDQUFFLENBQUVDLFFBQVEsQ0FBRU4sR0FBRyxDQUFDTyxJQUFKLENBQVNELFFBQXJCLENBQVQsQ0FBbEIsQ0FBVCxDQUFWLENBRG1DLHdCQUVuQ0UsT0FBTyxDQUFDQyxHQUFSLENBQVlOLElBQVosRUFGbUMsd0JBR25DSyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaLENBQTRCTixJQUFJLENBQUNPLFVBQUwsQ0FBZ0JDLFFBQTVDLEVBSG1DLHdCQUluQ0gsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosQ0FBNkJULEdBQUcsQ0FBQ08sSUFBSixDQUFTSSxRQUF0QyxFQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQSxLQUFNQyxDQUFBQSxLQUFLLDBCQUFHLEtBQU1mLENBQUFBLE1BQU0sQ0FBQ2dCLE9BQVAsQ0FBZWIsR0FBRyxDQUFDTyxJQUFKLENBQVNJLFFBQXhCLENBQWlDUixJQUFJLENBQUNPLFVBQUwsQ0FBZ0JDLFFBQWpELENBQVQsQ0FBWCxDQWJtQyx3QkFjbkNILE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVosQ0FBd0JHLEtBQXhCLEVBZG1DLHdCQWVuQyxHQUFJLDRCQUFBQSxLQUFLLCtCQUFJVCxJQUFKLENBQVQsQ0FBbUIsb0RBQ1RLLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaLENBQW9DTixJQUFwQyxFQURTLHdCQUVURixHQUFHLENBQUNhLElBQUosQ0FBU1gsSUFBVCxFQUNELENBSFQsSUFHYSxxREFDREYsR0FBRyxDQUFDYSxJQUFKLENBQVMsZ0JBQVQsRUFDSCxDQUdyQjtBQUdBO0FBRUE7QUFDQTtBQUVJO0FBQ0E7QUFDQTtBQUNBO0FBQ0gsQ0FuQ00sQ0FzQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBiYXNlNjQgZnJvbSAnYmFzZS02NCdcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdFwiO1xuXG5pbXBvcnQge3VzZXJNb2RlbH0gZnJvbSAnLi4vbW9kZWxzL2luZGV4Lm1qcyc7XG5cbmV4cG9ydCBjb25zdCBzaWduaW4gPSBhc3luYyhyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHVzZXJNb2RlbC5maW5kT25lKHsgd2hlcmU6IHsgdXNlcm5hbWU6IHJlcS5ib2R5LnVzZXJuYW1lIH0gfSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicGFzc3Nzc3Nzc3Nzc1wiLHVzZXIuZGF0YVZhbHVlcy5wYXNzd29yZCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInBhc3N3b3JkIGJvZHkgXCIscmVxLmJvZHkucGFzc3dvcmQpO1xuXG4gICAgICAgICAgICAvLyBjb25zdCBzYWx0ID0gYXdhaXQgYmNyeXB0LmdlblNhbHQoMTApO1xuICAgICAgICAgICAgLy8gY29uc3QgcGFzc3dvcmRUZXN0ID0gYXdhaXQgYmNyeXB0Lmhhc2gocmVxLmJvZHkucGFzc3dvcmQsIHNhbHQpO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocGFzc3dvcmRUZXN0KTtcblxuICAgICAgICAgICAgLy8gY29uc3QgdGVzdCA9IGF3YWl0IGJjcnlwdC5oYXNoKHJlcS5ib2R5LnBhc3N3b3JkLCAxMCk7XG4gICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ3Rlc3QgYWhzc3MnLHRlc3QpO1xuXG4gICAgICAgICAgICBjb25zdCB2YWxpZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHJlcS5ib2R5LnBhc3N3b3JkLHVzZXIuZGF0YVZhbHVlcy5wYXNzd29yZCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInZhbGlkIDogXCIsIHZhbGlkKTtcbiAgICAgICAgICAgIGlmICh2YWxpZCAmJiB1c2VyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0ZWVlZWVlZWVlZWVlZWVlZWVzdCBcIix1c2VyKTtcbiAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbih1c2VyKSA7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmpzb24oXCJXT1JORyBMT0dJTiEhIVwiKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgIFxuICAgICBcbi8vIGNvbnNvbGUubG9nKCdyZXEuYm9keXl5eXl5eXl5eXl5eXknLHJlcS5ib2R5LnVzZXJuYW1lKTtcblxuXG4vLyBjb25zdCB1c2VyID0gYXdhaXQgdXNlck1vZGVsLmZpbmRPbmUoeyB3aGVyZTogeyB1c2VybmFtZTogcmVxLmJvZHkudXNlcm5hbWUgfSB9KTtcblxuLy8gLy8gY29uc3QgdmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgcmVxLmJvZHkucGFzc3dvcmQpO1xuLy8gY29uc29sZS5sb2coJ3ZhbGlkc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcycsdXNlcik7XG5cbiAgICAvLyBVc2VyU2NoZW1hLmF1dGhlbnRpY2F0ZUJhc2ljKHJlcS5ib2R5LnVzZXJuYW1lLHJlcS5ib2R5LnBhc3N3b3JkKS50aGVuKHZhbGlkVXNlcj0+IHtcbiAgICAvLyAgICAgcmVxLnVzZXIgPSB2YWxpZFVzZXI7XG4gICAgLy8gICAgIG5leHQoKTtcbiAgICAvLyB9KS5jYXRjaChlcnI9PiBuZXh0KCdpbnZhbGlkIHVzZXJzJykpO1xufVxuXG5cbi8vIFVzZXJTY2hlbWEuYXV0aGVudGljYXRlQmFzaWMgPSBhc3luYyBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4vLyAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXJTY2hlbWEuZmluZE9uZSh7IHdoZXJlOiB7IHVzZXJuYW1lOiB1c2VybmFtZSB9IH0pO1xuLy8gICAgIGNvbnNvbGUubG9nKFwiYWFhYWFhYWFhYWEgICAgICAgIGF1dGhlbnRpY2F0ZUJhc2ljIHVzZXIgOiBcIiwgdXNlcik7XG4vLyAgICAgY29uc29sZS5sb2coXCJhYWFhYWFhYWFhYWFhYSAgICAgICAgICBwYXNzd29yZCA6XCIsIHBhc3N3b3JkKTtcbi8vICAgICBjb25zb2xlLmxvZyhcImFhYWFhYWFhYWFhYWFhYWFhYWEgICAgICB1c2VyLnBhc3N3b3JkIDogXCIsIHVzZXIucGFzc3dvcmQpO1xuLy8gICAgIGNvbnN0IHZhbGlkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpO1xuLy8gICAgIGNvbnNvbGUubG9nKFwidmFsaWQgOiBcIiwgdmFsaWQpO1xuLy8gICAgIGlmICh2YWxpZCkge1xuLy8gICAgICAgY29uc29sZS5sb2coXCJ0ZWVlZWVlZWVlZWVlZWVlZWVzdCBcIix1c2VyKTtcbi8vICAgICAgIHJldHVybiB1c2VyO1xuLy8gICAgIH1cbi8vICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFVzZXJOYW1lIGFuZCBQYXNzd29yZFwiKTtcbi8vICAgfTsiXX0=