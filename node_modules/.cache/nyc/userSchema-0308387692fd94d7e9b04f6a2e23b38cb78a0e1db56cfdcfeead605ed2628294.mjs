function cov_1g9occ97bv(){var path="/home/thaerbraizat/back-end/models/userSchema.mjs";var hash="b415cfb32e6132e9abbe95caba11ddf536984d8e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/models/userSchema.mjs",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:50}},"1":{start:{line:5,column:19},end:{line:57,column:1}},"2":{start:{line:6,column:16},end:{line:25,column:4}},"3":{start:{line:19,column:8},end:{line:19,column:61}},"4":{start:{line:21,column:21},end:{line:21,column:28}},"5":{start:{line:22,column:8},end:{line:22,column:42}},"6":{start:{line:41,column:2},end:{line:54,column:4}},"7":{start:{line:42,column:4},end:{line:53,column:5}},"8":{start:{line:43,column:26},end:{line:43,column:51}},"9":{start:{line:44,column:19},end:{line:46,column:8}},"10":{start:{line:47,column:6},end:{line:49,column:7}},"11":{start:{line:48,column:8},end:{line:48,column:20}},"12":{start:{line:52,column:6},end:{line:52,column:33}},"13":{start:{line:56,column:2},end:{line:56,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:19},end:{line:5,column:20}},loc:{start:{line:5,column:47},end:{line:57,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:6},end:{line:18,column:7}},loc:{start:{line:18,column:12},end:{line:20,column:7}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:6},end:{line:21,column:7}},loc:{start:{line:21,column:20},end:{line:23,column:7}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:28},end:{line:41,column:29}},loc:{start:{line:41,column:51},end:{line:54,column:3}},line:41}},branchMap:{"0":{loc:{start:{line:1,column:15},end:{line:1,column:50}},type:"binary-expr",locations:[{start:{line:1,column:15},end:{line:1,column:33}},{start:{line:1,column:37},end:{line:1,column:50}}],line:1},"1":{loc:{start:{line:47,column:6},end:{line:49,column:7}},type:"if",locations:[{start:{line:47,column:6},end:{line:49,column:7}},{start:{line:47,column:6},end:{line:49,column:7}}],line:47}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b415cfb32e6132e9abbe95caba11ddf536984d8e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1g9occ97bv=function(){return actualCoverage;};}return actualCoverage;}cov_1g9occ97bv();const SECRET=(cov_1g9occ97bv().s[0]++,(cov_1g9occ97bv().b[0][0]++,process.env.SECRET)||(cov_1g9occ97bv().b[0][1]++,"mysecretkey"));import jwt from"jsonwebtoken";import bcrypt from"bcrypt";cov_1g9occ97bv().s[1]++;const UserSchema=(sequelizeDB,DataTypes)=>{cov_1g9occ97bv().f[0]++;const Users=(cov_1g9occ97bv().s[2]++,sequelizeDB.define("users",{username:{type:DataTypes.STRING,allowNull:false// unique: true,
},password:{type:DataTypes.STRING,allowNull:false},token:{type:DataTypes.VIRTUAL,get(){cov_1g9occ97bv().f[1]++;cov_1g9occ97bv().s[3]++;return jwt.sign({username:this.username},SECRET);},set(tokenObj){cov_1g9occ97bv().f[2]++;cov_1g9occ97bv().s[4]++;compare;cov_1g9occ97bv().s[5]++;return jwt.sign(tokenObj,SECRET);}}}));// Users.authenticateBasic = async function (username, password) {
//   const user = await this.findOne({ where: { username: username } });
//   // console.log("authenticateBasic user : ", user);
//   // console.log("password :", password);
//   // console.log("user.password : ", user.password);
//   const valid = await bcrypt.compare(password, user.password);
//   console.log("valid : ", valid);
//   if (valid) {
//     console.log("teeeeeeeeeeeeeeeeest ",user);
//     return user;
//   }
//   // throw new Error("Invalid UserName and Password");
// };
cov_1g9occ97bv().s[6]++;Users.authenticateToken=async function(token){cov_1g9occ97bv().f[3]++;cov_1g9occ97bv().s[7]++;try{const parsedToken=(cov_1g9occ97bv().s[8]++,jwt.verify(token,SECRET));// {username: thaer ... }
const user=(cov_1g9occ97bv().s[9]++,await this.findOne({where:{username:parsedToken.username}}));cov_1g9occ97bv().s[10]++;if(user){cov_1g9occ97bv().b[1][0]++;cov_1g9occ97bv().s[11]++;return user;}else{cov_1g9occ97bv().b[1][1]++;}// return ("invalid token");
}catch(e){cov_1g9occ97bv().s[12]++;throw new Error(e.message);}};cov_1g9occ97bv().s[13]++;return Users;};export default UserSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJTY2hlbWEubWpzIl0sIm5hbWVzIjpbIlNFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJqd3QiLCJiY3J5cHQiLCJVc2VyU2NoZW1hIiwic2VxdWVsaXplREIiLCJEYXRhVHlwZXMiLCJVc2VycyIsImRlZmluZSIsInVzZXJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInBhc3N3b3JkIiwidG9rZW4iLCJWSVJUVUFMIiwiZ2V0Iiwic2lnbiIsInNldCIsInRva2VuT2JqIiwiY29tcGFyZSIsImF1dGhlbnRpY2F0ZVRva2VuIiwicGFyc2VkVG9rZW4iLCJ2ZXJpZnkiLCJ1c2VyIiwiZmluZE9uZSIsIndoZXJlIiwiZSIsIkVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6IjA1RUFlWTsyRkFmWixLQUFNQSxDQUFBQSxNQUFNLDBCQUFHLDRCQUFBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFBWiwrQkFBc0IsYUFBdEIsQ0FBSCxDQUFaLENBQ0EsTUFBT0csQ0FBQUEsR0FBUCxLQUFnQixjQUFoQixDQUNBLE1BQU9DLENBQUFBLE1BQVAsS0FBbUIsUUFBbkIsQyx3QkFFQSxLQUFNQyxDQUFBQSxVQUFVLENBQUcsQ0FBQ0MsV0FBRCxDQUFjQyxTQUFkLEdBQTRCLHlCQUM3QyxLQUFNQyxDQUFBQSxLQUFLLDBCQUFHRixXQUFXLENBQUNHLE1BQVosQ0FBbUIsT0FBbkIsQ0FBNEIsQ0FDeENDLFFBQVEsQ0FBRSxDQUNSQyxJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFEUixDQUVSQyxTQUFTLENBQUUsS0FDWDtBQUhRLENBRDhCLENBTXhDQyxRQUFRLENBQUUsQ0FDUkgsSUFBSSxDQUFFSixTQUFTLENBQUNLLE1BRFIsQ0FFUkMsU0FBUyxDQUFFLEtBRkgsQ0FOOEIsQ0FVeENFLEtBQUssQ0FBRSxDQUNMSixJQUFJLENBQUVKLFNBQVMsQ0FBQ1MsT0FEWCxDQUVMQyxHQUFHLEVBQUcsaURBQ0osTUFBT2QsQ0FBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVMsQ0FBRVIsUUFBUSxDQUFFLEtBQUtBLFFBQWpCLENBQVQsQ0FBc0NWLE1BQXRDLENBQVAsQ0FDRCxDQUpJLENBS0xtQixHQUFHLENBQUNDLFFBQUQsQ0FBVyxpREFBQ0MsT0FBTyxDQUFSLHdCQUNaLE1BQU9sQixDQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBU0UsUUFBVCxDQUFtQnBCLE1BQW5CLENBQVAsQ0FDRCxDQVBJLENBVmlDLENBQTVCLENBQUgsQ0FBWCxDQXFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxDNkMsd0JBb0M3Q1EsS0FBSyxDQUFDYyxpQkFBTixDQUEwQixlQUFnQlAsS0FBaEIsQ0FBdUIsaURBQy9DLEdBQUksQ0FDRixLQUFNUSxDQUFBQSxXQUFXLDBCQUFHcEIsR0FBRyxDQUFDcUIsTUFBSixDQUFXVCxLQUFYLENBQWtCZixNQUFsQixDQUFILENBQWpCLENBQStDO0FBQy9DLEtBQU15QixDQUFBQSxJQUFJLDBCQUFHLEtBQU0sTUFBS0MsT0FBTCxDQUFhLENBQzlCQyxLQUFLLENBQUUsQ0FBRWpCLFFBQVEsQ0FBRWEsV0FBVyxDQUFDYixRQUF4QixDQUR1QixDQUFiLENBQVQsQ0FBVixDQUZFLHlCQUtGLEdBQUllLElBQUosQ0FBVSxxREFDUixNQUFPQSxDQUFBQSxJQUFQLENBQ0QsQ0FGRCxpQ0FHQTtBQUNELENBQUMsTUFBT0csQ0FBUCxDQUFVLDBCQUNWLEtBQU0sSUFBSUMsQ0FBQUEsS0FBSixDQUFVRCxDQUFDLENBQUNFLE9BQVosQ0FBTixDQUNELENBQ0YsQ0FiRCxDQXBDNkMseUJBbUQ3QyxNQUFPdEIsQ0FBQUEsS0FBUCxDQUNELENBcERELENBc0RBLGNBQWVILENBQUFBLFVBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTRUNSRVQgPSBwcm9jZXNzLmVudi5TRUNSRVQgfHwgXCJteXNlY3JldGtleVwiO1xuaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCI7XG5pbXBvcnQgYmNyeXB0IGZyb20gXCJiY3J5cHRcIjtcblxuY29uc3QgVXNlclNjaGVtYSA9IChzZXF1ZWxpemVEQiwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFVzZXJzID0gc2VxdWVsaXplREIuZGVmaW5lKFwidXNlcnNcIiwge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIC8vIHVuaXF1ZTogdHJ1ZSxcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIHRva2VuOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVklSVFVBTCxcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIGp3dC5zaWduKHsgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUgfSwgU0VDUkVUKTtcbiAgICAgIH0sXG4gICAgICBzZXQodG9rZW5PYmopIHtjb21wYXJlXG4gICAgICAgIHJldHVybiBqd3Quc2lnbih0b2tlbk9iaiwgU0VDUkVUKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gVXNlcnMuYXV0aGVudGljYXRlQmFzaWMgPSBhc3luYyBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gIC8vICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuZmluZE9uZSh7IHdoZXJlOiB7IHVzZXJuYW1lOiB1c2VybmFtZSB9IH0pO1xuICAvLyAgIC8vIGNvbnNvbGUubG9nKFwiYXV0aGVudGljYXRlQmFzaWMgdXNlciA6IFwiLCB1c2VyKTtcbiAgLy8gICAvLyBjb25zb2xlLmxvZyhcInBhc3N3b3JkIDpcIiwgcGFzc3dvcmQpO1xuICAvLyAgIC8vIGNvbnNvbGUubG9nKFwidXNlci5wYXNzd29yZCA6IFwiLCB1c2VyLnBhc3N3b3JkKTtcbiAgLy8gICBjb25zdCB2YWxpZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKTtcbiAgLy8gICBjb25zb2xlLmxvZyhcInZhbGlkIDogXCIsIHZhbGlkKTtcbiAgLy8gICBpZiAodmFsaWQpIHtcbiAgLy8gICAgIGNvbnNvbGUubG9nKFwidGVlZWVlZWVlZWVlZWVlZWVlc3QgXCIsdXNlcik7XG4gIC8vICAgICByZXR1cm4gdXNlcjtcbiAgLy8gICB9XG4gIC8vICAgLy8gdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBVc2VyTmFtZSBhbmQgUGFzc3dvcmRcIik7XG4gIC8vIH07XG5cbiAgVXNlcnMuYXV0aGVudGljYXRlVG9rZW4gPSBhc3luYyBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGFyc2VkVG9rZW4gPSBqd3QudmVyaWZ5KHRva2VuLCBTRUNSRVQpOyAvLyB7dXNlcm5hbWU6IHRoYWVyIC4uLiB9XG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5maW5kT25lKHtcbiAgICAgICAgd2hlcmU6IHsgdXNlcm5hbWU6IHBhcnNlZFRva2VuLnVzZXJuYW1lIH0sXG4gICAgICB9KTtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHJldHVybiB1c2VyO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIChcImludmFsaWQgdG9rZW5cIik7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGUubWVzc2FnZSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBVc2Vycztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJTY2hlbWE7XG4iXX0=