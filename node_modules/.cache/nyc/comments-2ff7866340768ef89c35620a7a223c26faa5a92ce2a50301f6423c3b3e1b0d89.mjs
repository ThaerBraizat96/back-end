"use strict";function cov_gxblne36q(){var path="/home/thaerbraizat/back-end/routes/comments.mjs";var hash="49d62eaf59555316158591fc1dc4405042ede679";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/routes/comments.mjs",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:16,column:0},end:{line:16,column:65}},"2":{start:{line:20,column:0},end:{line:23,column:3}},"3":{start:{line:21,column:18},end:{line:21,column:40}},"4":{start:{line:22,column:2},end:{line:22,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:36},end:{line:20,column:37}},loc:{start:{line:20,column:53},end:{line:23,column:1}},line:20}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"49d62eaf59555316158591fc1dc4405042ede679"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_gxblne36q=function(){return actualCoverage;};}return actualCoverage;}cov_gxblne36q();import express from"express";import{addComment,getCommentsByPostId,getAllComments}from"../controllers/comments.controller.mjs";import{bearerAuth}from"../middleware/bearerAuth.mjs";const router=(cov_gxblne36q().s[0]++,express.Router());// router.post("/comments/:postId", bearerAuth, (req,res)=>{
//    await addComment
//    res.json()
// }
// );
cov_gxblne36q().s[1]++;router.get("/comments/:postId",bearerAuth,getCommentsByPostId);cov_gxblne36q().s[2]++;router.get("/comments",bearerAuth,async(req,res)=>{cov_gxblne36q().f[0]++;const allData=(cov_gxblne36q().s[3]++,await getAllComments());cov_gxblne36q().s[4]++;res.json(allData);});export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRzLm1qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYWRkQ29tbWVudCIsImdldENvbW1lbnRzQnlQb3N0SWQiLCJnZXRBbGxDb21tZW50cyIsImJlYXJlckF1dGgiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJhbGxEYXRhIiwianNvbiJdLCJtYXBwaW5ncyI6IkFBQUEsYSxvaENBZVk7eUZBZFosTUFBT0EsQ0FBQUEsT0FBUCxLQUFvQixTQUFwQixDQUNBLE9BQ0lDLFVBREosQ0FFSUMsbUJBRkosQ0FHSUMsY0FISixLQUlTLHdDQUpULENBS0EsT0FBU0MsVUFBVCxLQUEyQiw4QkFBM0IsQ0FFQSxLQUFNQyxDQUFBQSxNQUFNLHlCQUFHTCxPQUFPLENBQUNNLE1BQVIsRUFBSCxDQUFaLENBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTt1QkFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsbUJBQVgsQ0FBZ0NILFVBQWhDLENBQTRDRixtQkFBNUMsRSx1QkFJQUcsTUFBTSxDQUFDRSxHQUFQLENBQVcsV0FBWCxDQUF3QkgsVUFBeEIsQ0FBb0MsTUFBT0ksR0FBUCxDQUFXQyxHQUFYLEdBQWlCLHdCQUNuRCxLQUFNQyxDQUFBQSxPQUFPLHlCQUFHLEtBQU1QLENBQUFBLGNBQWMsRUFBdkIsQ0FBYixDQURtRCx1QkFFbkRNLEdBQUcsQ0FBQ0UsSUFBSixDQUFTRCxPQUFULEVBQ0QsQ0FIRCxFQU1BLGNBQWVMLENBQUFBLE1BQWYiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQge1xuICAgIGFkZENvbW1lbnQsXG4gICAgZ2V0Q29tbWVudHNCeVBvc3RJZCxcbiAgICBnZXRBbGxDb21tZW50cyxcbiAgfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvY29tbWVudHMuY29udHJvbGxlci5tanNcIjtcbmltcG9ydCB7IGJlYXJlckF1dGggfSBmcm9tIFwiLi4vbWlkZGxld2FyZS9iZWFyZXJBdXRoLm1qc1wiO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuLy8gcm91dGVyLnBvc3QoXCIvY29tbWVudHMvOnBvc3RJZFwiLCBiZWFyZXJBdXRoLCAocmVxLHJlcyk9Pntcbi8vICAgIGF3YWl0IGFkZENvbW1lbnRcbi8vICAgIHJlcy5qc29uKClcbi8vIH1cbi8vICk7XG5yb3V0ZXIuZ2V0KFwiL2NvbW1lbnRzLzpwb3N0SWRcIiwgYmVhcmVyQXV0aCwgZ2V0Q29tbWVudHNCeVBvc3RJZCk7XG5cblxuXG5yb3V0ZXIuZ2V0KFwiL2NvbW1lbnRzXCIsIGJlYXJlckF1dGgsIGFzeW5jIChyZXEscmVzKT0+e1xuICBjb25zdCBhbGxEYXRhID0gYXdhaXQgZ2V0QWxsQ29tbWVudHMoKVxuICByZXMuanNvbihhbGxEYXRhKVxufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19