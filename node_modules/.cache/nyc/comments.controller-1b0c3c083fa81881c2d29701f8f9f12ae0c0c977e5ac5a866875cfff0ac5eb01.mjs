function cov_1imftni25o(){var path="/home/thaerbraizat/back-end/controllers/comments.controller.mjs";var hash="3f46fb5d4b4a606b7c788ef98fd7f5df78359bcd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/controllers/comments.controller.mjs",statementMap:{"0":{start:{line:26,column:26},end:{line:39,column:1}},"1":{start:{line:27,column:2},end:{line:38,column:3}},"2":{start:{line:28,column:19},end:{line:28,column:46}},"3":{start:{line:29,column:21},end:{line:34,column:6}},"4":{start:{line:35,column:2},end:{line:35,column:19}},"5":{start:{line:37,column:3},end:{line:37,column:30}},"6":{start:{line:41,column:36},end:{line:47,column:3}},"7":{start:{line:42,column:19},end:{line:42,column:46}},"8":{start:{line:43,column:29},end:{line:45,column:6}},"9":{start:{line:46,column:4},end:{line:46,column:29}},"10":{start:{line:48,column:30},end:{line:48,column:65}},"11":{start:{line:48,column:42},end:{line:48,column:65}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:26},end:{line:26,column:27}},loc:{start:{line:26,column:46},end:{line:39,column:1}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:41,column:36},end:{line:41,column:37}},loc:{start:{line:41,column:56},end:{line:47,column:3}},line:41},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:30},end:{line:48,column:31}},loc:{start:{line:48,column:42},end:{line:48,column:65}},line:48}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3f46fb5d4b4a606b7c788ef98fd7f5df78359bcd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1imftni25o=function(){return actualCoverage;};}return actualCoverage;}cov_1imftni25o();import{commentsModel}from"../models/index.mjs";// export const addComment = async (req, res) => {
//   try {
//     const postId = parseInt(req.params.postId);
//     const comments = await commentsModel.create({
//       name: req.body.name,
//       email: req.body.email,
//       body: req.body.body,
//       postId: postId,
//     });
//     res.json(comments);
//   } catch {
//     res.json("Cant add comment");
//   }
// };
// export const getCommentsByPostId = async (req, res) => {
//   const postId = parseInt(req.params.postId);
//   const commentsByPostId = await commentsModel.findAll({
//     where: { postId: postId },
//   });
//   res.json(commentsByPostId);
// };
cov_1imftni25o().s[0]++;export const addComment=async(req,res)=>{cov_1imftni25o().f[0]++;cov_1imftni25o().s[1]++;try{const postId=(cov_1imftni25o().s[2]++,parseInt(req.params.postId));const comments=(cov_1imftni25o().s[3]++,await commentsModel.create({name:req.body.name,email:req.body.email,body:req.body.body,postId:postId}));cov_1imftni25o().s[4]++;return comments;}catch{cov_1imftni25o().s[5]++;return"Cant add comment";}};cov_1imftni25o().s[6]++;export const getCommentsByPostId=async(req,res)=>{cov_1imftni25o().f[1]++;const postId=(cov_1imftni25o().s[7]++,parseInt(req.params.postId));const commentsByPostId=(cov_1imftni25o().s[8]++,await commentsModel.findAll({where:{postId:postId}}));cov_1imftni25o().s[9]++;return commentsByPostId;};cov_1imftni25o().s[10]++;export const getAllComments=async()=>{cov_1imftni25o().f[2]++;cov_1imftni25o().s[11]++;return commentsModel.findAll();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRzLmNvbnRyb2xsZXIubWpzIl0sIm5hbWVzIjpbImNvbW1lbnRzTW9kZWwiLCJhZGRDb21tZW50IiwicmVxIiwicmVzIiwicG9zdElkIiwicGFyc2VJbnQiLCJwYXJhbXMiLCJjb21tZW50cyIsImNyZWF0ZSIsIm5hbWUiLCJib2R5IiwiZW1haWwiLCJnZXRDb21tZW50c0J5UG9zdElkIiwiY29tbWVudHNCeVBvc3RJZCIsImZpbmRBbGwiLCJ3aGVyZSIsImdldEFsbENvbW1lbnRzIl0sIm1hcHBpbmdzIjoieXhEQWVZOzJGQWZaLE9BQVNBLGFBQVQsS0FBOEIscUJBQTlCLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO3dCQUVBLE1BQU8sTUFBTUMsQ0FBQUEsVUFBVSxDQUFHLE1BQU9DLEdBQVAsQ0FBWUMsR0FBWixHQUFvQixpREFDNUMsR0FBSSxDQUNGLEtBQU1DLENBQUFBLE1BQU0sMEJBQUdDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDSSxNQUFKLENBQVdGLE1BQVosQ0FBWCxDQUFaLENBQ0EsS0FBTUcsQ0FBQUEsUUFBUSwwQkFBRyxLQUFNUCxDQUFBQSxhQUFhLENBQUNRLE1BQWQsQ0FBcUIsQ0FDMUNDLElBQUksQ0FBRVAsR0FBRyxDQUFDUSxJQUFKLENBQVNELElBRDJCLENBRTFDRSxLQUFLLENBQUVULEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxLQUYwQixDQUcxQ0QsSUFBSSxDQUFFUixHQUFHLENBQUNRLElBQUosQ0FBU0EsSUFIMkIsQ0FJMUNOLE1BQU0sQ0FBRUEsTUFKa0MsQ0FBckIsQ0FBVCxDQUFkLENBRkUsd0JBUUosTUFBT0csQ0FBQUEsUUFBUCxDQUNDLENBQUMsS0FBTSx5QkFDUCxNQUFPLGtCQUFQLENBQ0EsQ0FDRixDQWJNLEMsd0JBZU4sTUFBTyxNQUFNSyxDQUFBQSxtQkFBbUIsQ0FBRyxNQUFPVixHQUFQLENBQVlDLEdBQVosR0FBb0IseUJBQ3BELEtBQU1DLENBQUFBLE1BQU0sMEJBQUdDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDSSxNQUFKLENBQVdGLE1BQVosQ0FBWCxDQUFaLENBQ0EsS0FBTVMsQ0FBQUEsZ0JBQWdCLDBCQUFHLEtBQU1iLENBQUFBLGFBQWEsQ0FBQ2MsT0FBZCxDQUFzQixDQUNuREMsS0FBSyxDQUFFLENBQUVYLE1BQU0sQ0FBRUEsTUFBVixDQUQ0QyxDQUF0QixDQUFULENBQXRCLENBRm9ELHdCQUtwRCxNQUFPUyxDQUFBQSxnQkFBUCxDQUNELENBTkssQyx5QkFPUixNQUFPLE1BQU1HLENBQUFBLGNBQWMsQ0FBRyxTQUFZLHdEQUFBaEIsQ0FBQUEsYUFBYSxDQUFDYyxPQUFkLEdBQXVCLENBQTFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tbWVudHNNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvaW5kZXgubWpzXCI7XG5cbi8vIGV4cG9ydCBjb25zdCBhZGRDb21tZW50ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgY29uc3QgcG9zdElkID0gcGFyc2VJbnQocmVxLnBhcmFtcy5wb3N0SWQpO1xuLy8gICAgIGNvbnN0IGNvbW1lbnRzID0gYXdhaXQgY29tbWVudHNNb2RlbC5jcmVhdGUoe1xuLy8gICAgICAgbmFtZTogcmVxLmJvZHkubmFtZSxcbi8vICAgICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbCxcbi8vICAgICAgIGJvZHk6IHJlcS5ib2R5LmJvZHksXG4vLyAgICAgICBwb3N0SWQ6IHBvc3RJZCxcbi8vICAgICB9KTtcbi8vICAgICByZXMuanNvbihjb21tZW50cyk7XG4vLyAgIH0gY2F0Y2gge1xuLy8gICAgIHJlcy5qc29uKFwiQ2FudCBhZGQgY29tbWVudFwiKTtcbi8vICAgfVxuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IGdldENvbW1lbnRzQnlQb3N0SWQgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbi8vICAgY29uc3QgcG9zdElkID0gcGFyc2VJbnQocmVxLnBhcmFtcy5wb3N0SWQpO1xuLy8gICBjb25zdCBjb21tZW50c0J5UG9zdElkID0gYXdhaXQgY29tbWVudHNNb2RlbC5maW5kQWxsKHtcbi8vICAgICB3aGVyZTogeyBwb3N0SWQ6IHBvc3RJZCB9LFxuLy8gICB9KTtcbi8vICAgcmVzLmpzb24oY29tbWVudHNCeVBvc3RJZCk7XG4vLyB9O1xuXG5leHBvcnQgY29uc3QgYWRkQ29tbWVudCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHBvc3RJZCA9IHBhcnNlSW50KHJlcS5wYXJhbXMucG9zdElkKTtcbiAgICBjb25zdCBjb21tZW50cyA9IGF3YWl0IGNvbW1lbnRzTW9kZWwuY3JlYXRlKHtcbiAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWUsXG4gICAgICBlbWFpbDogcmVxLmJvZHkuZW1haWwsXG4gICAgICBib2R5OiByZXEuYm9keS5ib2R5LFxuICAgICAgcG9zdElkOiBwb3N0SWQsXG4gICAgfSk7XG4gIHJldHVybihjb21tZW50cyk7XG4gIH0gY2F0Y2gge1xuICAgcmV0dXJuKFwiQ2FudCBhZGQgY29tbWVudFwiKTtcbiAgfVxufTtcblxuIGV4cG9ydCBjb25zdCBnZXRDb21tZW50c0J5UG9zdElkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgcG9zdElkID0gcGFyc2VJbnQocmVxLnBhcmFtcy5wb3N0SWQpO1xuICAgIGNvbnN0IGNvbW1lbnRzQnlQb3N0SWQgPSBhd2FpdCBjb21tZW50c01vZGVsLmZpbmRBbGwoe1xuICAgICAgd2hlcmU6IHsgcG9zdElkOiBwb3N0SWQgfSxcbiAgICB9KTtcbiAgICByZXR1cm4oY29tbWVudHNCeVBvc3RJZCk7XG4gIH07XG5leHBvcnQgY29uc3QgZ2V0QWxsQ29tbWVudHMgPSBhc3luYyAoKSA9PiBjb21tZW50c01vZGVsLmZpbmRBbGwoKTsiXX0=