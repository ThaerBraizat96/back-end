function cov_1g9occ97bv(){var path="/home/thaerbraizat/back-end/models/userSchema.mjs";var hash="86d0930f55a8c4a3f17727b16269430ecd523143";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/models/userSchema.mjs",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:50}},"1":{start:{line:5,column:19},end:{line:59,column:1}},"2":{start:{line:6,column:16},end:{line:25,column:4}},"3":{start:{line:58,column:2},end:{line:58,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:19},end:{line:5,column:20}},loc:{start:{line:5,column:47},end:{line:59,column:1}},line:5}},branchMap:{"0":{loc:{start:{line:1,column:15},end:{line:1,column:50}},type:"binary-expr",locations:[{start:{line:1,column:15},end:{line:1,column:33}},{start:{line:1,column:37},end:{line:1,column:50}}],line:1}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"86d0930f55a8c4a3f17727b16269430ecd523143"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1g9occ97bv=function(){return actualCoverage;};}return actualCoverage;}cov_1g9occ97bv();const SECRET=(cov_1g9occ97bv().s[0]++,(cov_1g9occ97bv().b[0][0]++,process.env.SECRET)||(cov_1g9occ97bv().b[0][1]++,"mysecretkey"));import jwt from"jsonwebtoken";import bcrypt from"bcrypt";cov_1g9occ97bv().s[1]++;const UserSchema=(sequelizeDB,DataTypes)=>{cov_1g9occ97bv().f[0]++;const Users=(cov_1g9occ97bv().s[2]++,sequelizeDB.define("newUsers",{username:{type:DataTypes.STRING,allowNull:false,unique:true},password:{type:DataTypes.STRING,allowNull:false}// token: {
//   type: DataTypes.VIRTUAL,
//   get() {
//     return jwt.sign({ username: this.username }, SECRET);
//   },
// set(tokenObj) {compare
//   return jwt.sign(tokenObj, SECRET);
// },
// },
}));// Users.authenticateBasic = async function (username, password) {
//   const user = await this.findOne({ where: { username: username } });
//   // console.log("authenticateBasic user : ", user);
//   // console.log("password :", password);
//   // console.log("user.password : ", user.password);
//   const valid = await bcrypt.compare(password, user.password);
//   console.log("valid : ", valid);
//   if (valid) {
//     console.log("teeeeeeeeeeeeeeeeest ",user);
//     return user;
//   }
//   // throw new Error("Invalid UserName and Password");
// };
// Users.authenticateToken = async function (token) {
//   try {
//     const parsedToken = jwt.verify(token, SECRET); // {username: thaer ... }
//     const user = await this.findOne({
//       where: { username: parsedToken.username },
//     });
//       return user;
//     // }else{
//     // return ("invalid token");
//     // }
//   } catch (e) {
//     throw new Error(e.message);
//   }
// };
cov_1g9occ97bv().s[3]++;return Users;};export default UserSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJTY2hlbWEubWpzIl0sIm5hbWVzIjpbIlNFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJqd3QiLCJiY3J5cHQiLCJVc2VyU2NoZW1hIiwic2VxdWVsaXplREIiLCJEYXRhVHlwZXMiLCJVc2VycyIsImRlZmluZSIsInVzZXJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInVuaXF1ZSIsInBhc3N3b3JkIl0sIm1hcHBpbmdzIjoia3FDQWVZOzJGQWZaLEtBQU1BLENBQUFBLE1BQU0sMEJBQUcsNEJBQUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixNQUFaLCtCQUFzQixhQUF0QixDQUFILENBQVosQ0FDQSxNQUFPRyxDQUFBQSxHQUFQLEtBQWdCLGNBQWhCLENBQ0EsTUFBT0MsQ0FBQUEsTUFBUCxLQUFtQixRQUFuQixDLHdCQUVBLEtBQU1DLENBQUFBLFVBQVUsQ0FBRyxDQUFDQyxXQUFELENBQWNDLFNBQWQsR0FBNEIseUJBQzdDLEtBQU1DLENBQUFBLEtBQUssMEJBQUdGLFdBQVcsQ0FBQ0csTUFBWixDQUFtQixVQUFuQixDQUErQixDQUMzQ0MsUUFBUSxDQUFFLENBQ1JDLElBQUksQ0FBRUosU0FBUyxDQUFDSyxNQURSLENBRVJDLFNBQVMsQ0FBRSxLQUZILENBR1JDLE1BQU0sQ0FBRSxJQUhBLENBRGlDLENBTTNDQyxRQUFRLENBQUUsQ0FDUkosSUFBSSxDQUFFSixTQUFTLENBQUNLLE1BRFIsQ0FFUkMsU0FBUyxDQUFFLEtBRkgsQ0FJVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0U7QUFDQTtBQUNBO0FBQ0Y7QUFsQjJDLENBQS9CLENBQUgsQ0FBWCxDQXFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuRDZDLHdCQXFEN0MsTUFBT0wsQ0FBQUEsS0FBUCxDQUNELENBdERELENBd0RBLGNBQWVILENBQUFBLFVBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTRUNSRVQgPSBwcm9jZXNzLmVudi5TRUNSRVQgfHwgXCJteXNlY3JldGtleVwiO1xuaW1wb3J0IGp3dCBmcm9tIFwianNvbndlYnRva2VuXCI7XG5pbXBvcnQgYmNyeXB0IGZyb20gXCJiY3J5cHRcIjtcblxuY29uc3QgVXNlclNjaGVtYSA9IChzZXF1ZWxpemVEQiwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFVzZXJzID0gc2VxdWVsaXplREIuZGVmaW5lKFwibmV3VXNlcnNcIiwge1xuICAgIHVzZXJuYW1lOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIC8vIHRva2VuOiB7XG4gICAgLy8gICB0eXBlOiBEYXRhVHlwZXMuVklSVFVBTCxcbiAgICAvLyAgIGdldCgpIHtcbiAgICAvLyAgICAgcmV0dXJuIGp3dC5zaWduKHsgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUgfSwgU0VDUkVUKTtcbiAgICAvLyAgIH0sXG4gICAgICAvLyBzZXQodG9rZW5PYmopIHtjb21wYXJlXG4gICAgICAvLyAgIHJldHVybiBqd3Quc2lnbih0b2tlbk9iaiwgU0VDUkVUKTtcbiAgICAgIC8vIH0sXG4gICAgLy8gfSxcbiAgfSk7XG5cbiAgLy8gVXNlcnMuYXV0aGVudGljYXRlQmFzaWMgPSBhc3luYyBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gIC8vICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuZmluZE9uZSh7IHdoZXJlOiB7IHVzZXJuYW1lOiB1c2VybmFtZSB9IH0pO1xuICAvLyAgIC8vIGNvbnNvbGUubG9nKFwiYXV0aGVudGljYXRlQmFzaWMgdXNlciA6IFwiLCB1c2VyKTtcbiAgLy8gICAvLyBjb25zb2xlLmxvZyhcInBhc3N3b3JkIDpcIiwgcGFzc3dvcmQpO1xuICAvLyAgIC8vIGNvbnNvbGUubG9nKFwidXNlci5wYXNzd29yZCA6IFwiLCB1c2VyLnBhc3N3b3JkKTtcbiAgLy8gICBjb25zdCB2YWxpZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKTtcbiAgLy8gICBjb25zb2xlLmxvZyhcInZhbGlkIDogXCIsIHZhbGlkKTtcbiAgLy8gICBpZiAodmFsaWQpIHtcbiAgLy8gICAgIGNvbnNvbGUubG9nKFwidGVlZWVlZWVlZWVlZWVlZWVlc3QgXCIsdXNlcik7XG4gIC8vICAgICByZXR1cm4gdXNlcjtcbiAgLy8gICB9XG4gIC8vICAgLy8gdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBVc2VyTmFtZSBhbmQgUGFzc3dvcmRcIik7XG4gIC8vIH07XG5cbiAgLy8gVXNlcnMuYXV0aGVudGljYXRlVG9rZW4gPSBhc3luYyBmdW5jdGlvbiAodG9rZW4pIHtcbiAgLy8gICB0cnkge1xuICAvLyAgICAgY29uc3QgcGFyc2VkVG9rZW4gPSBqd3QudmVyaWZ5KHRva2VuLCBTRUNSRVQpOyAvLyB7dXNlcm5hbWU6IHRoYWVyIC4uLiB9XG4gIC8vICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5maW5kT25lKHtcbiAgLy8gICAgICAgd2hlcmU6IHsgdXNlcm5hbWU6IHBhcnNlZFRva2VuLnVzZXJuYW1lIH0sXG4gIC8vICAgICB9KTtcbiAgICAgIFxuICAvLyAgICAgICByZXR1cm4gdXNlcjtcbiAgICAgIFxuICAvLyAgICAgLy8gfWVsc2V7XG4gIC8vICAgICAvLyByZXR1cm4gKFwiaW52YWxpZCB0b2tlblwiKTtcbiAgLy8gICAgIC8vIH1cbiAgLy8gICB9IGNhdGNoIChlKSB7XG4gIC8vICAgICB0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlKTtcbiAgLy8gICB9XG4gIC8vIH07XG5cbiAgcmV0dXJuIFVzZXJzO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlclNjaGVtYTtcbiJdfQ==