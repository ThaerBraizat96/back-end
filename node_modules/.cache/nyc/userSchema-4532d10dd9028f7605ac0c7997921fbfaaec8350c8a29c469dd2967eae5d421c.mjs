function cov_1g9occ97bv(){var path="/home/thaerbraizat/back-end/models/userSchema.mjs";var hash="0fc166a56d4da608994977a9c79b9ebad932e36f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/thaerbraizat/back-end/models/userSchema.mjs",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:50}},"1":{start:{line:5,column:19},end:{line:56,column:1}},"2":{start:{line:6,column:16},end:{line:25,column:4}},"3":{start:{line:19,column:8},end:{line:19,column:61}},"4":{start:{line:22,column:8},end:{line:22,column:42}},"5":{start:{line:27,column:2},end:{line:38,column:4}},"6":{start:{line:28,column:17},end:{line:28,column:70}},"7":{start:{line:29,column:4},end:{line:29,column:51}},"8":{start:{line:30,column:4},end:{line:30,column:40}},"9":{start:{line:31,column:4},end:{line:31,column:51}},"10":{start:{line:32,column:18},end:{line:32,column:63}},"11":{start:{line:33,column:4},end:{line:33,column:35}},"12":{start:{line:34,column:4},end:{line:36,column:5}},"13":{start:{line:35,column:6},end:{line:35,column:18}},"14":{start:{line:37,column:4},end:{line:37,column:53}},"15":{start:{line:40,column:2},end:{line:53,column:4}},"16":{start:{line:41,column:4},end:{line:52,column:5}},"17":{start:{line:42,column:26},end:{line:42,column:51}},"18":{start:{line:43,column:19},end:{line:45,column:8}},"19":{start:{line:46,column:6},end:{line:48,column:7}},"20":{start:{line:47,column:8},end:{line:47,column:20}},"21":{start:{line:49,column:6},end:{line:49,column:39}},"22":{start:{line:51,column:6},end:{line:51,column:33}},"23":{start:{line:55,column:2},end:{line:55,column:15}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:19},end:{line:5,column:20}},loc:{start:{line:5,column:47},end:{line:56,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:6},end:{line:18,column:7}},loc:{start:{line:18,column:12},end:{line:20,column:7}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:6},end:{line:21,column:7}},loc:{start:{line:21,column:20},end:{line:23,column:7}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:28},end:{line:27,column:29}},loc:{start:{line:27,column:64},end:{line:38,column:3}},line:27},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:28},end:{line:40,column:29}},loc:{start:{line:40,column:51},end:{line:53,column:3}},line:40}},branchMap:{"0":{loc:{start:{line:1,column:15},end:{line:1,column:50}},type:"binary-expr",locations:[{start:{line:1,column:15},end:{line:1,column:33}},{start:{line:1,column:37},end:{line:1,column:50}}],line:1},"1":{loc:{start:{line:34,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:36,column:5}},{start:{line:34,column:4},end:{line:36,column:5}}],line:34},"2":{loc:{start:{line:46,column:6},end:{line:48,column:7}},type:"if",locations:[{start:{line:46,column:6},end:{line:48,column:7}},{start:{line:46,column:6},end:{line:48,column:7}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0fc166a56d4da608994977a9c79b9ebad932e36f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1g9occ97bv=function(){return actualCoverage;};}return actualCoverage;}cov_1g9occ97bv();const SECRET=(cov_1g9occ97bv().s[0]++,(cov_1g9occ97bv().b[0][0]++,process.env.SECRET)||(cov_1g9occ97bv().b[0][1]++,"mysecretkey"));import jwt from"jsonwebtoken";import bcrypt from"bcrypt";cov_1g9occ97bv().s[1]++;const UserSchema=(sequelizeDB,DataTypes)=>{cov_1g9occ97bv().f[0]++;const Users=(cov_1g9occ97bv().s[2]++,sequelizeDB.define("users",{username:{type:DataTypes.STRING,allowNull:false// unique: true,
},password:{type:DataTypes.STRING,allowNull:false},token:{type:DataTypes.VIRTUAL,get(){cov_1g9occ97bv().f[1]++;cov_1g9occ97bv().s[3]++;return jwt.sign({username:this.username},SECRET);},set(tokenObj){cov_1g9occ97bv().f[2]++;cov_1g9occ97bv().s[4]++;return jwt.sign(tokenObj,SECRET);}}}));cov_1g9occ97bv().s[5]++;Users.authenticateBasic=async function(username,password){cov_1g9occ97bv().f[3]++;const user=(cov_1g9occ97bv().s[6]++,await this.findOne({where:{username:username}}));cov_1g9occ97bv().s[7]++;console.log("authenticateBasic user : ",user);cov_1g9occ97bv().s[8]++;console.log("password :",password);cov_1g9occ97bv().s[9]++;console.log("user.password : ",user.password);const valid=(cov_1g9occ97bv().s[10]++,await bcrypt.compare(password,user.password));cov_1g9occ97bv().s[11]++;console.log("valid : ",valid);cov_1g9occ97bv().s[12]++;if(valid){cov_1g9occ97bv().b[1][0]++;cov_1g9occ97bv().s[13]++;return user;}else{cov_1g9occ97bv().b[1][1]++;}cov_1g9occ97bv().s[14]++;throw new Error("Invalid UserName and Password");};cov_1g9occ97bv().s[15]++;Users.authenticateToken=async function(token){cov_1g9occ97bv().f[4]++;cov_1g9occ97bv().s[16]++;try{const parsedToken=(cov_1g9occ97bv().s[17]++,jwt.verify(token,SECRET));// {username: thaer ... }
const user=(cov_1g9occ97bv().s[18]++,await this.findOne({where:{username:parsedToken.username}}));cov_1g9occ97bv().s[19]++;if(user){cov_1g9occ97bv().b[2][0]++;cov_1g9occ97bv().s[20]++;return user;}else{cov_1g9occ97bv().b[2][1]++;}cov_1g9occ97bv().s[21]++;throw new Error("invalid token");}catch(e){cov_1g9occ97bv().s[22]++;throw new Error(e.message);}};cov_1g9occ97bv().s[23]++;return Users;};export default UserSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJTY2hlbWEubWpzIl0sIm5hbWVzIjpbIlNFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJqd3QiLCJiY3J5cHQiLCJVc2VyU2NoZW1hIiwic2VxdWVsaXplREIiLCJEYXRhVHlwZXMiLCJVc2VycyIsImRlZmluZSIsInVzZXJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInBhc3N3b3JkIiwidG9rZW4iLCJWSVJUVUFMIiwiZ2V0Iiwic2lnbiIsInNldCIsInRva2VuT2JqIiwiYXV0aGVudGljYXRlQmFzaWMiLCJ1c2VyIiwiZmluZE9uZSIsIndoZXJlIiwiY29uc29sZSIsImxvZyIsInZhbGlkIiwiY29tcGFyZSIsIkVycm9yIiwiYXV0aGVudGljYXRlVG9rZW4iLCJwYXJzZWRUb2tlbiIsInZlcmlmeSIsImUiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiZzNHQWVZOzJGQWZaLEtBQU1BLENBQUFBLE1BQU0sMEJBQUcsNEJBQUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixNQUFaLCtCQUFzQixhQUF0QixDQUFILENBQVosQ0FDQSxNQUFPRyxDQUFBQSxHQUFQLEtBQWdCLGNBQWhCLENBQ0EsTUFBT0MsQ0FBQUEsTUFBUCxLQUFtQixRQUFuQixDLHdCQUVBLEtBQU1DLENBQUFBLFVBQVUsQ0FBRyxDQUFDQyxXQUFELENBQWNDLFNBQWQsR0FBNEIseUJBQzdDLEtBQU1DLENBQUFBLEtBQUssMEJBQUdGLFdBQVcsQ0FBQ0csTUFBWixDQUFtQixPQUFuQixDQUE0QixDQUN4Q0MsUUFBUSxDQUFFLENBQ1JDLElBQUksQ0FBRUosU0FBUyxDQUFDSyxNQURSLENBRVJDLFNBQVMsQ0FBRSxLQUNYO0FBSFEsQ0FEOEIsQ0FNeENDLFFBQVEsQ0FBRSxDQUNSSCxJQUFJLENBQUVKLFNBQVMsQ0FBQ0ssTUFEUixDQUVSQyxTQUFTLENBQUUsS0FGSCxDQU44QixDQVV4Q0UsS0FBSyxDQUFFLENBQ0xKLElBQUksQ0FBRUosU0FBUyxDQUFDUyxPQURYLENBRUxDLEdBQUcsRUFBRyxpREFDSixNQUFPZCxDQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUyxDQUFFUixRQUFRLENBQUUsS0FBS0EsUUFBakIsQ0FBVCxDQUFzQ1YsTUFBdEMsQ0FBUCxDQUNELENBSkksQ0FLTG1CLEdBQUcsQ0FBQ0MsUUFBRCxDQUFXLGlEQUNaLE1BQU9qQixDQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBU0UsUUFBVCxDQUFtQnBCLE1BQW5CLENBQVAsQ0FDRCxDQVBJLENBVmlDLENBQTVCLENBQUgsQ0FBWCxDQUQ2Qyx3QkFzQjdDUSxLQUFLLENBQUNhLGlCQUFOLENBQTBCLGVBQWdCWCxRQUFoQixDQUEwQkksUUFBMUIsQ0FBb0MseUJBQzVELEtBQU1RLENBQUFBLElBQUksMEJBQUcsS0FBTSxNQUFLQyxPQUFMLENBQWEsQ0FBRUMsS0FBSyxDQUFFLENBQUVkLFFBQVEsQ0FBRUEsUUFBWixDQUFULENBQWIsQ0FBVCxDQUFWLENBRDRELHdCQUU1RGUsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVosQ0FBeUNKLElBQXpDLEVBRjRELHdCQUc1REcsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWixDQUEwQlosUUFBMUIsRUFINEQsd0JBSTVEVyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWixDQUFnQ0osSUFBSSxDQUFDUixRQUFyQyxFQUNBLEtBQU1hLENBQUFBLEtBQUssMkJBQUcsS0FBTXZCLENBQUFBLE1BQU0sQ0FBQ3dCLE9BQVAsQ0FBZWQsUUFBZixDQUF5QlEsSUFBSSxDQUFDUixRQUE5QixDQUFULENBQVgsQ0FMNEQseUJBTTVEVyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLENBQXdCQyxLQUF4QixFQU40RCx5QkFPNUQsR0FBSUEsS0FBSixDQUFXLHFEQUNULE1BQU9MLENBQUFBLElBQVAsQ0FDRCxDQUZELGlDQVA0RCx5QkFVNUQsS0FBTSxJQUFJTyxDQUFBQSxLQUFKLENBQVUsK0JBQVYsQ0FBTixDQUNELENBWEQsQ0F0QjZDLHlCQW1DN0NyQixLQUFLLENBQUNzQixpQkFBTixDQUEwQixlQUFnQmYsS0FBaEIsQ0FBdUIsa0RBQy9DLEdBQUksQ0FDRixLQUFNZ0IsQ0FBQUEsV0FBVywyQkFBRzVCLEdBQUcsQ0FBQzZCLE1BQUosQ0FBV2pCLEtBQVgsQ0FBa0JmLE1BQWxCLENBQUgsQ0FBakIsQ0FBK0M7QUFDL0MsS0FBTXNCLENBQUFBLElBQUksMkJBQUcsS0FBTSxNQUFLQyxPQUFMLENBQWEsQ0FDOUJDLEtBQUssQ0FBRSxDQUFFZCxRQUFRLENBQUVxQixXQUFXLENBQUNyQixRQUF4QixDQUR1QixDQUFiLENBQVQsQ0FBVixDQUZFLHlCQUtGLEdBQUlZLElBQUosQ0FBVSxxREFDUixNQUFPQSxDQUFBQSxJQUFQLENBQ0QsQ0FGRCxpQ0FMRSx5QkFRRixLQUFNLElBQUlPLENBQUFBLEtBQUosQ0FBVSxlQUFWLENBQU4sQ0FDRCxDQUFDLE1BQU9JLENBQVAsQ0FBVSwwQkFDVixLQUFNLElBQUlKLENBQUFBLEtBQUosQ0FBVUksQ0FBQyxDQUFDQyxPQUFaLENBQU4sQ0FDRCxDQUNGLENBYkQsQ0FuQzZDLHlCQWtEN0MsTUFBTzFCLENBQUFBLEtBQVAsQ0FDRCxDQW5ERCxDQXFEQSxjQUFlSCxDQUFBQSxVQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0VDUkVUID0gcHJvY2Vzcy5lbnYuU0VDUkVUIHx8IFwibXlzZWNyZXRrZXlcIjtcbmltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0XCI7XG5cbmNvbnN0IFVzZXJTY2hlbWEgPSAoc2VxdWVsaXplREIsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBVc2VycyA9IHNlcXVlbGl6ZURCLmRlZmluZShcInVzZXJzXCIsIHtcbiAgICB1c2VybmFtZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAvLyB1bmlxdWU6IHRydWUsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgfSxcbiAgICB0b2tlbjoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlZJUlRVQUwsXG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBqd3Quc2lnbih7IHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lIH0sIFNFQ1JFVCk7XG4gICAgICB9LFxuICAgICAgc2V0KHRva2VuT2JqKSB7XG4gICAgICAgIHJldHVybiBqd3Quc2lnbih0b2tlbk9iaiwgU0VDUkVUKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG5cbiAgVXNlcnMuYXV0aGVudGljYXRlQmFzaWMgPSBhc3luYyBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuZmluZE9uZSh7IHdoZXJlOiB7IHVzZXJuYW1lOiB1c2VybmFtZSB9IH0pO1xuICAgIGNvbnNvbGUubG9nKFwiYXV0aGVudGljYXRlQmFzaWMgdXNlciA6IFwiLCB1c2VyKTtcbiAgICBjb25zb2xlLmxvZyhcInBhc3N3b3JkIDpcIiwgcGFzc3dvcmQpO1xuICAgIGNvbnNvbGUubG9nKFwidXNlci5wYXNzd29yZCA6IFwiLCB1c2VyLnBhc3N3b3JkKTtcbiAgICBjb25zdCB2YWxpZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKTtcbiAgICBjb25zb2xlLmxvZyhcInZhbGlkIDogXCIsIHZhbGlkKTtcbiAgICBpZiAodmFsaWQpIHtcbiAgICAgIHJldHVybiB1c2VyO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFVzZXJOYW1lIGFuZCBQYXNzd29yZFwiKTtcbiAgfTtcblxuICBVc2Vycy5hdXRoZW50aWNhdGVUb2tlbiA9IGFzeW5jIGZ1bmN0aW9uICh0b2tlbikge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwYXJzZWRUb2tlbiA9IGp3dC52ZXJpZnkodG9rZW4sIFNFQ1JFVCk7IC8vIHt1c2VybmFtZTogdGhhZXIgLi4uIH1cbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmZpbmRPbmUoe1xuICAgICAgICB3aGVyZTogeyB1c2VybmFtZTogcGFyc2VkVG9rZW4udXNlcm5hbWUgfSxcbiAgICAgIH0pO1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHRva2VuXCIpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gVXNlcnM7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBVc2VyU2NoZW1hO1xuIl19